{"version":3,"sources":["components/Header.js","components/Navbar.js","utils/axiosConfig.js","components/TaskList.js","components/AddTask.js","components/EditTask.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Navbar","to","url","ip","address","replace","Task","props","task","name","description","String","date","substring","_id","href","onClick","deleteTask","TaskList","state","tasks","bind","taskList","axios","get","then","response","setState","Array","from","data","catch","err","console","log","id","delete","res","this","filter","el","map","key","AddTask","Date","onChangeName","onChangeDescription","onChangeDate","onSubmit","e","target","value","preventDefault","post","window","location","type","required","onChange","selected","EditTask","match","params","Footer","App","path","exact","component","UpdateTask","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.bcd87d53.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header className=\"masthead mb-auto\">\n\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t<h1 className=\"masthead-brand\">DCCS Task Manager</h1>\n\t\t\t\t\t\t<p className=\"lead\">Welcome to the DCCS Task Manager App.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"site-header sticky-top py-1\">\n\t\t\t\t<div className=\"container d-flex flex-column flex-md-row justify-content-between\">\n\t\t\t\t\t<Link to=\"/\" className=\"py-2 d-none d-md-inline-block\">\n\t\t\t\t\t\tTasks\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/add\" className=\"py-2 d-none d-md-inline-block\">\n\t\t\t\t\t\tAdd New Task\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</nav>\n\n\t\t\t// <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n\t\t\t// \t<Link to=\"/\"  className=\"navbar-brand\"></Link>\n\t\t\t// \t<div className=\"collpse navbar-collapse\">\n\t\t\t// \t\t<ul>\n\t\t\t// \t\t\t<li>\n\t\t\t// \t\t\t\t<Link to=\"/\" className=\"nav-link\">\n\t\t\t// \t\t\t\t\tTasks\n\t\t\t// \t\t\t\t</Link>\n\t\t\t// \t\t\t</li>\n\t\t\t// \t\t\t<li>\n\t\t\t// \t\t\t\t<Link to=\"/add\" className=\"nav-link\">\n\t\t\t// \t\t\t\t\tAdd New Task\n\t\t\t// \t\t\t\t</Link>\n\t\t\t// \t\t\t</li>\n\t\t\t// \t\t</ul>\n\t\t\t// \t</div>\n\t\t\t// </nav>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","import ip from \"ip\";\n\nvar env = process.env.NODE_ENV; // current environment\nvar current_IP = ip.address().replace(/\\./g, \"-\"); //Current ip\n\nexport const url =\n\tenv === \"production\"\n\t\t? `http://100.25.211.182:5000/task/` // production\n\t\t: \"http://localhost:5000/task/\"; // development\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { url } from \"../utils/axiosConfig\";\n\nconst Task = (props) => (\n\t<tr>\n\t\t<td>{props.task.name}</td>\n\t\t<td>{props.task.description}</td>\n\t\t<td>{String(props.task.date).substring(0, 10)}</td>\n\t\t<td>\n\t\t\t<Link to={\"/update/\" + props.task._id}>edit</Link> |\n\t\t\t<a\n\t\t\t\thref=\"#\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.deleteTask(props.task._id);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tdelete\n\t\t\t</a>\n\t\t</td>\n\t</tr>\n);\n\nexport class TaskList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttasks: []\n\t\t};\n\n\t\tthis.deleteTask = this.deleteTask.bind(this);\n\t\tthis.taskList = this.taskList.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get(String(url))\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({ tasks: Array.from(response.data) });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tdeleteTask(id) {\n\t\taxios.delete(String(url) + id).then((res) => console.log(res.data));\n\n\t\tthis.setState({\n\t\t\ttasks: this.state.tasks.filter((el) => el._id !== id)\n\t\t});\n\t}\n\n\ttaskList() {\n\t\treturn this.state.tasks.map((task) => {\n\t\t\treturn <Task task={task} deleteTask={this.deleteTask} key={task._id} />;\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Tasks</h3>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{this.taskList()}</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { url } from \"../utils/axiosConfig\";\n\nexport class AddTask extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tdate: new Date()\n\t\t};\n\n\t\tthis.onChangeName = this.onChangeName.bind(this);\n\t\tthis.onChangeDescription = this.onChangeDescription.bind(this);\n\t\tthis.onChangeDate = this.onChangeDate.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tonChangeName(e) {\n\t\tthis.setState({\n\t\t\tname: e.target.value\n\t\t});\n\t}\n\tonChangeDescription(e) {\n\t\tthis.setState({\n\t\t\tdescription: e.target.value\n\t\t});\n\t}\n\tonChangeDate(date) {\n\t\tthis.setState({\n\t\t\tdate: date\n\t\t});\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst task = {\n\t\t\tname: this.state.name,\n\t\t\tdescription: this.state.description,\n\t\t\tdate: this.state.date\n\t\t};\n\n\t\tconsole.log(task);\n\n\t\taxios.post(String(url) + \"add\", task).then((res) => console.log(res.data));\n\n\t\twindow.location = \"/\";\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Add New Task</h3>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Name: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\tonChange={this.onChangeName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Task Description: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\tonChange={this.onChangeDescription}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Date to Complete: </label>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\tselected={this.state.date}\n\t\t\t\t\t\t\t\tonChange={this.onChangeDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input type=\"submit\" value=\"Add Task\" className=\"btn btn-primary\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AddTask;\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { url } from \"../utils/axiosConfig\";\n\nexport class EditTask extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tdate: new Date()\n\t\t};\n\n\t\tthis.onChangeName = this.onChangeName.bind(this);\n\t\tthis.onChangeDescription = this.onChangeDescription.bind(this);\n\t\tthis.onChangeDate = this.onChangeDate.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get(url + this.props.match.params.id)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(this.props.match.params.id);\n\t\t\t\tthis.setState({\n\t\t\t\t\tname: response.data.name,\n\t\t\t\t\tdescription: response.data.description,\n\t\t\t\t\tdate: new Date(response.data.date)\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tonChangeName(e) {\n\t\tthis.setState({\n\t\t\tname: e.target.value\n\t\t});\n\t}\n\tonChangeDescription(e) {\n\t\tthis.setState({\n\t\t\tdescription: e.target.value\n\t\t});\n\t}\n\tonChangeDate(date) {\n\t\tthis.setState({\n\t\t\tdate: date\n\t\t});\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst task = {\n\t\t\tname: this.state.name,\n\t\t\tdescription: this.state.description,\n\t\t\tdate: this.state.date\n\t\t};\n\n\t\tconsole.log(task);\n\n\t\taxios\n\t\t\t.post(String(url) + \"update/\" + this.props.match.params.id, task)\n\t\t\t.then((res) => console.log(res.data));\n\n\t\twindow.location = \"/\";\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Edit Task</h3>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Name: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\tonChange={this.onChangeName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Task Description: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\tonChange={this.onChangeDescription}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Date to Complete: </label>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\tselected={this.state.date}\n\t\t\t\t\t\t\t\tonChange={this.onChangeDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvalue=\"Edit Task\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditTask;\n","import React, { Component } from \"react\";\n\nexport class Footer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<footer className=\"mastfoot mt-auto\">\n\t\t\t\t\t          \n\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t<p>Data and Cloud Computing Society, 2020 ©</p>          \n\t\t\t\t\t</div>\n\t\t\t\t\t          \n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport TaskList from \"./components/TaskList\";\nimport AddTask from \"./components/AddTask\";\nimport UpdateTask from \"./components/EditTask\";\nimport Footer from \"./components/Footer\";\n\nexport class App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Route path=\"/\" exact component={TaskList} />\n\t\t\t\t\t<Route path=\"/update/:id\" exact component={UpdateTask} />\n\t\t\t\t\t<Route path=\"/add\" exact component={AddTask} />\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}