{"version":3,"sources":["components/Header.js","components/Navbar.js","components/TaskList.js","components/AddTask.js","components/EditTask.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Navbar","to","Task","props","task","name","description","date","substring","_id","href","onClick","deleteTask","TaskList","state","tasks","bind","taskList","axios","get","then","response","setState","data","catch","err","console","log","id","delete","res","this","filter","el","map","key","AddTask","Date","onChangeName","onChangeDescription","onChangeDate","onSubmit","e","target","value","preventDefault","post","window","location","type","required","onChange","selected","EditTask","match","params","Footer","App","path","exact","component","UpdateTask","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.50d04b8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Header extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<header className=\"masthead mb-auto\">\n\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t<h1 className=\"masthead-brand\">DCCS Task Manager</h1>\n\t\t\t\t\t\t<p className=\"lead\">Welcome to the DCCS Task Manager App.</p>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport class Navbar extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<nav className=\"site-header sticky-top py-1\">\n\t\t\t\t<div className=\"container d-flex flex-column flex-md-row justify-content-between\">\n\t\t\t\t\t<Link to=\"/\" className=\"py-2 d-none d-md-inline-block\">\n\t\t\t\t\t\tTasks\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/add\" className=\"py-2 d-none d-md-inline-block\">\n\t\t\t\t\t\tAdd New Task\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</nav>\n\n\t\t\t// <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\n\t\t\t// \t<Link to=\"/\"  className=\"navbar-brand\"></Link>\n\t\t\t// \t<div className=\"collpse navbar-collapse\">\n\t\t\t// \t\t<ul>\n\t\t\t// \t\t\t<li>\n\t\t\t// \t\t\t\t<Link to=\"/\" className=\"nav-link\">\n\t\t\t// \t\t\t\t\tTasks\n\t\t\t// \t\t\t\t</Link>\n\t\t\t// \t\t\t</li>\n\t\t\t// \t\t\t<li>\n\t\t\t// \t\t\t\t<Link to=\"/add\" className=\"nav-link\">\n\t\t\t// \t\t\t\t\tAdd New Task\n\t\t\t// \t\t\t\t</Link>\n\t\t\t// \t\t\t</li>\n\t\t\t// \t\t</ul>\n\t\t\t// \t</div>\n\t\t\t// </nav>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nconst Task = (props) => (\n\t<tr>\n\t\t<td>{props.task.name}</td>\n\t\t<td>{props.task.description}</td>\n\t\t<td>{props.task.date.substring(0, 10)}</td>\n\t\t<td>\n\t\t\t<Link to={\"/update/\" + props.task._id}>edit</Link> |\n\t\t\t<a\n\t\t\t\thref=\"#\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.deleteTask(props.task._id);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tdelete\n\t\t\t</a>\n\t\t</td>\n\t</tr>\n);\n\nexport class TaskList extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttasks: []\n\t\t};\n\n\t\tthis.deleteTask = this.deleteTask.bind(this);\n\t\tthis.taskList = this.taskList.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get(\"http://localhost:5000/task\")\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({ tasks: response.data });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tdeleteTask(id) {\n\t\taxios\n\t\t\t.delete(\"http://localhost:5000/task/\" + id)\n\t\t\t.then((res) => console.log(res.data));\n\n\t\tthis.setState({\n\t\t\ttasks: this.state.tasks.filter((el) => el._id !== id)\n\t\t});\n\t}\n\n\ttaskList() {\n\t\treturn this.state.tasks.map((task) => {\n\t\t\treturn <Task task={task} deleteTask={this.deleteTask} key={task._id} />;\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Tasks</h3>\n\t\t\t\t<table className=\"table\">\n\t\t\t\t\t<thead className=\"thead-light\">\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>{this.taskList()}</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default TaskList;\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport class AddTask extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tdate: new Date()\n\t\t};\n\n\t\tthis.onChangeName = this.onChangeName.bind(this);\n\t\tthis.onChangeDescription = this.onChangeDescription.bind(this);\n\t\tthis.onChangeDate = this.onChangeDate.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tonChangeName(e) {\n\t\tthis.setState({\n\t\t\tname: e.target.value\n\t\t});\n\t}\n\tonChangeDescription(e) {\n\t\tthis.setState({\n\t\t\tdescription: e.target.value\n\t\t});\n\t}\n\tonChangeDate(date) {\n\t\tthis.setState({\n\t\t\tdate: date\n\t\t});\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst task = {\n\t\t\tname: this.state.name,\n\t\t\tdescription: this.state.description,\n\t\t\tdate: this.state.date\n\t\t};\n\n\t\tconsole.log(task);\n\n\t\taxios\n\t\t\t.post(\"http://localhost:5000/task/add\", task)\n\t\t\t.then((res) => console.log(res.data));\n\n\t\twindow.location = \"/\";\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Add New Task</h3>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Name: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\tonChange={this.onChangeName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Task Description: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\tonChange={this.onChangeDescription}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Date to Complete: </label>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\tselected={this.state.date}\n\t\t\t\t\t\t\t\tonChange={this.onChangeDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input type=\"submit\" value=\"Add Task\" className=\"btn btn-primary\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default AddTask;\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport axios from \"axios\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport class EditTask extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: \"\",\n\t\t\tdescription: \"\",\n\t\t\tdate: new Date()\n\t\t};\n\n\t\tthis.onChangeName = this.onChangeName.bind(this);\n\t\tthis.onChangeDescription = this.onChangeDescription.bind(this);\n\t\tthis.onChangeDate = this.onChangeDate.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\taxios\n\t\t\t.get(\"http://localhost:5000/task/\" + this.props.match.params.id)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(this.props.match.params.id);\n\t\t\t\tthis.setState({\n\t\t\t\t\tname: response.data.name,\n\t\t\t\t\tdescription: response.data.description,\n\t\t\t\t\tdate: new Date(response.data.date)\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t}\n\n\tonChangeName(e) {\n\t\tthis.setState({\n\t\t\tname: e.target.value\n\t\t});\n\t}\n\tonChangeDescription(e) {\n\t\tthis.setState({\n\t\t\tdescription: e.target.value\n\t\t});\n\t}\n\tonChangeDate(date) {\n\t\tthis.setState({\n\t\t\tdate: date\n\t\t});\n\t}\n\n\tonSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst task = {\n\t\t\tname: this.state.name,\n\t\t\tdescription: this.state.description,\n\t\t\tdate: this.state.date\n\t\t};\n\n\t\tconsole.log(task);\n\n\t\taxios\n\t\t\t.post(\n\t\t\t\t\"http://localhost:5000/task/update/\" + this.props.match.params.id,\n\t\t\t\ttask\n\t\t\t)\n\t\t\t.then((res) => console.log(res.data));\n\n\t\twindow.location = \"/\";\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3>Edit Task</h3>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Name: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\tonChange={this.onChangeName}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Task Description: </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\tvalue={this.state.description}\n\t\t\t\t\t\t\tonChange={this.onChangeDescription}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label>Date to Complete: </label>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\tselected={this.state.date}\n\t\t\t\t\t\t\t\tonChange={this.onChangeDate}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tvalue=\"Edit Task\"\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default EditTask;\n","import React, { Component } from \"react\";\n\nexport class Footer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<footer className=\"mastfoot mt-auto\">\n\t\t\t\t\t          \n\t\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t\t<p>Data and Cloud Computing Society, 2020 ©</p>          \n\t\t\t\t\t</div>\n\t\t\t\t\t          \n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Navbar from \"./components/Navbar\";\nimport TaskList from \"./components/TaskList\";\nimport AddTask from \"./components/AddTask\";\nimport UpdateTask from \"./components/EditTask\";\nimport Footer from \"./components/Footer\";\n\nexport class App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Route path=\"/\" exact component={TaskList} />\n\t\t\t\t\t<Route path=\"/update/:id\" exact component={UpdateTask} />\n\t\t\t\t\t<Route path=\"/add\" exact component={AddTask} />\n\t\t\t\t</div>\n\t\t\t\t<Footer />\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}